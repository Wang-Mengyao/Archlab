# 19307130352 Mengyao Wang
# Execution begins at address 0
    .pos 0
    irmovq stack, %rsp
    call main
    halt

# Sample linked list
    .align 8
ele1:
    .quad 0x00a
    .quad ele2
ele2:
    .quad 0x0b0
    .quad ele3
ele3:
    .quad 0xc00
    .quad 0

main:
    irmovq ele1, %rdi
    call sum_list
    ret

# long sum_list(list_ptr ls)
sum_list:
    irmovq $0, %rax
    irmovq $0x8, %rsi
    andq %rdi, %rdi # set cc and test whether ls is NULL
    jmp test
loop:
    mrmovq (%rdi), %r8
    addq %r8, %rax
    addq %rsi, %rdi # make %rdi store the pointer
    mrmovq (%rdi), %rdi # make %rdi point to the next node
    andq %rdi, %rdi
test:
    jne loop
    ret

# Stack starts here and grows to lower addresses
    .pos 0x100
stack:
